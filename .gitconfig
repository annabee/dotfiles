[user]
    name = Anna Bladzich
    email =
    useConfigOnly = true

[core]
    excludesfile = ~/.gitignore_global
    hooksPath = ~/.githooks

[push]
    default = simple

[pull]
	rebase = true

[fetch]
	prune = true

[init]
	defaultBranch = main

[alias]
        ca = commit --amend
        cb = checkout -b
        c = commit
        co = checkout
        br = branch
        hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
        logs = log --stat -p
        logg = log --oneline --decorate --graph --all
        lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
        lgn = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -n20
        lgna = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -n20 --all --remotes
        lga = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all --remotes
        lgj = log --color --graph --pretty=format:\"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\" --abbrev-commit --author=\"^(?!Jenkins).*$\" --perl-regexp
        pretty-log = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %aN%C(reset)%C(bold yellow)%d%C(reset)'
        pretty-log-with-dates = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%aI)%C(reset) %C(white)%s%C(reset) %C(dim white)- %aN%C(reset)%C(bold yellow)%d%C(reset)'
        log-recent = pretty-log --since='3 days ago'
        logv = pretty-log --all
        logvv = pretty-log-with-dates --all
        diff-base = !git diff --ignore-all-space $(git merge-base --fork-point main)
        difftool-base = !git difftool --trust-exit-code -y $(git merge-base --fork-point main)
        push-branch = !git push --set-upstream origin $(git symbolic-ref --short HEAD)
        branch-statuses = branch -vv
        accept-ours = "!f() { [ -z \"$@\" ] && set - '.'; git checkout --ours -- \"$@\"; git add -u -- \"$@\"; }; f"
        accept-theirs = "!f() { [ -z \"$@\" ] && set - '.'; git checkout --theirs -- \"$@\"; git add -u -- \"$@\"; }; f"
        contributor-stats = !git --no-pager log --format="%aN" --no-merges | sort | uniq -c | sort -r
        unmerged-branches = !git --no-pager branch --no-merged main
        unmerged-branches-all = !git --no-pager branch --all --no-merged main
        unmerged-branches-allv = !git --no-pager branch --all --no-merged main --sort=-committerdate --format='%(color:bold blue)%(objectname:short)%(color:reset) %(color:white)%(refname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))%(color:dim white) - %(authorname)%(color:reset)'
        author-line-count = !git ls-files | xargs -n1 git blame -w -M -C -C --line-porcelain | gsed -n 's/^author //p' | sort -f | uniq -ic | sort -nr
        author-commits = !git shortlog -sn --all
        recent-branches = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | gsed -r 's/(.+) ~ HEAD@\\{([^\\}]+)\\}$/\\2,\\1/g' | gsed 's/,,/,-,/g' | column -t -s '',''
        find-deleted-file = log --full-history -1 --
